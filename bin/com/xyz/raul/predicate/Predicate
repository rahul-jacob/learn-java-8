Interface Predicate<T>

@FunctionalInterface
public interface Predicate<T>
	Represents a predicate (boolean-valued function) of one argument.
	This is a functional interface whose functional method is 

test(Object).

1.Abstract Method	
a) boolean	test(T t)
	Evaluates this predicate on the given argument.

2.Default Method (By using these method we can join 2 predicates)
a) default Predicate<T>	and(Predicate<? super T> other)
	Returns a composed predicate that represents a short-circuiting logical AND of this predicate and another.
b) default Predicate<T>	negate()
	Returns a predicate that represents the logical negation of this predicate.
c) default Predicate<T>	or(Predicate<? super T> other)
	Returns a composed predicate that represents a short-circuiting logical OR of this predicate and another.

3.Static Method	
a) static <T> Predicate<T>	isEqual(Object targetRef)
	Returns a predicate that tests if two arguments are equal according to Objects.equals(Object, Object).